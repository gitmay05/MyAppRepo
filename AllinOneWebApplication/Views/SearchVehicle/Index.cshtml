
@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Search for Distance</h1>

<form id="distanceForm">
    <div class="form-group">
        <label for="from" class="control-label">From:</label>
        <input type="text" id="from" class="form-control" name="from" required>
    </div>
    <div class="form-group">
        <label for="to" class="control-label">To:</label>
        <input type="text" id="to" class="form-control" name="to" required>
    </div>
    <button type="submit" class="btn btn-primary">Calculate Distance</button>
</form>

<div id="map" style="height: 400px;"></div>
<div id="distanceResult"></div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap" async defer></script>
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: { lat: -34.397, lng: 150.644 }
            });
            var geocoder = new google.maps.Geocoder();
            var directionsService = new google.maps.DirectionsService();
            var directionsDisplay = new google.maps.DirectionsRenderer();
            directionsDisplay.setMap(map);

            document.getElementById('distanceForm').addEventListener('submit', function (event) {
                event.preventDefault();
                calculateDistance(geocoder, directionsService);
            });
        }

        function calculateDistance(geocoder, directionsService) {
            var from = document.getElementById('from').value;
            var to = document.getElementById('to').value;
            var distanceResult = document.getElementById('distanceResult');

            geocoder.geocode({ 'address': from }, function (results, status) {
                if (status === 'OK') {
                    var fromLocation = results[0].geometry.location;

                    geocoder.geocode({ 'address': to }, function (results, status) {
                        if (status === 'OK') {
                            var toLocation = results[0].geometry.location;

                            var request = {
                                origin: fromLocation,
                                destination: toLocation,
                                travelMode: 'DRIVING'
                            };

                            directionsService.route(request, function (response, status) {
                                if (status === 'OK') {
                                    var distance = response.routes[0].legs[0].distance.text;
                                    distanceResult.innerText = 'Distance: ' + distance;
                                } else {
                                    distanceResult.innerText = 'Error calculating distance';
                                }
                            });
                        } else {
                            distanceResult.innerText = 'Error geocoding destination address';
                        }
                    });
                } else {
                    distanceResult.innerText = 'Error geocoding origin address';
                }
            });
        }
    </script>
}


